// Code generated by protoc-gen-go.
// source: karma.proto
// DO NOT EDIT!

package data

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// SubredditKarma describes karma for a given subreddit
type SubredditKarma struct {
	Sr               *string `protobuf:"bytes,1,opt,name=sr" json:"sr,omitempty"`
	LinkKarma        *int32  `protobuf:"varint,2,opt,name=link_karma" json:"link_karma,omitempty"`
	CommentKarma     *int32  `protobuf:"varint,3,opt,name=comment_karma" json:"comment_karma,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SubredditKarma) Reset()         { *m = SubredditKarma{} }
func (m *SubredditKarma) String() string { return proto.CompactTextString(m) }
func (*SubredditKarma) ProtoMessage()    {}

func (m *SubredditKarma) GetSr() string {
	if m != nil && m.Sr != nil {
		return *m.Sr
	}
	return ""
}

func (m *SubredditKarma) GetLinkKarma() int32 {
	if m != nil && m.LinkKarma != nil {
		return *m.LinkKarma
	}
	return 0
}

func (m *SubredditKarma) GetCommentKarma() int32 {
	if m != nil && m.CommentKarma != nil {
		return *m.CommentKarma
	}
	return 0
}

// KarmaList describes a karma breakdown by subreddit.
type KarmaList struct {
	// data contains the list of subreddits with their karma breakdown.
	Data             []*SubredditKarma `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *KarmaList) Reset()         { *m = KarmaList{} }
func (m *KarmaList) String() string { return proto.CompactTextString(m) }
func (*KarmaList) ProtoMessage()    {}

func (m *KarmaList) GetData() []*SubredditKarma {
	if m != nil {
		return m.Data
	}
	return nil
}
